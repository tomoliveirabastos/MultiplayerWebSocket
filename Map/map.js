class Map{
    constructor(){
        this.size = 40;
        this.current = 0;
    }

    getMap(){
        let map = {
            0 : ()=>{
                return [
                    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1],
                    [1,1,1,1,0,0,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1],
                    [1,0,0,1,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1],
                    [1,0,0,1,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1],
                    [1,0,1,1,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,1,1,0,1,0,1,0,1],
                    [1,0,1,0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1],
                    [1,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1],
                    [1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],
                    [1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1],
                    [1,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1],
                    [1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,1,0,1,1,1,0,0,0,0,0,1],
                    [1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1],
                    [1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,1,0,0,1,1,0,1],
                    [1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,0,1],
                    [1,0,1,0,1,1,0,1,0,1,1,1,1,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,0,1],
                    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],
                    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                ]
            },
        }
        return map;
    }

    get_game_world(){
        let map = this.getMap()[this.current]();

        return {
            'max_height' : map.length * this.size,
            'max_width' : map[0].length * this.size
        }
        
    }

    get_tile(){
        let n = [];
        let m = this.getMap()[this.current]();
        for(let i =0; i < m.length; i++){
            for(let j = 0; j < m[i].length; j++){
                if(m[i][j] === 1){
                    n.push({
                        y: i * this.size,
                        x: j * this.size
                    });
                }
            }
        }
        return n;   
    }

    get_no_tile(){
        let n = [];
        let m = this.getMap()[this.current]();
        for(let i =0; i < m.length; i++){
            for(let j = 0; j < m[i].length; j++){
                if(m[i][j] === 0){
                    n.push({
                        y: i * this.size,
                        x: j * this.size
                    });
                }
            }
        }
        return n;   
    }
}
let map = new Map();
module.exports = map;